<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qgx.dao.CommentDao">

	<resultMap type="Comment" id="CommentResult">
		<result property="id" column="id"/>
		<result property="userIp" column="userIp"/>
		<result property="userName" column="userName"/>
		<result property="content" column="content" />
		<result property="commentDate" column="commentDate" />
		<result property="state" column="state" />

		<association property="blog" column="blogId" select="com.qgx.dao.BlogDao.getBlogById"/>
	</resultMap>

	<insert id="saveComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="id">
		insert into t_comment values (null,#{userIp},#{userName},#{blog.id},#{content},now(),0);
	</insert>

	<select id="listComment" parameterType="Map" resultMap="CommentResult" >
		 select * from t_comment
		 <where>
			 <if test="blogId != null">
				 and blogId = #{blogId}
			 </if>
			 <if test="state != null">
				and  state = #{state}
			 </if>
		 </where>
		order by commentDate desc
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>

	</select>

	<select id="countComment" parameterType="Map" resultType="Integer">
		 select count(*) from t_comment
		 <where>
			 <if test="state != null">
				 and  state like #{state}
			 </if>
		 </where>
	</select>

	<update id="updateComment" parameterType="Comment">
		update t_comment
		<set>
			<if test="state != null">
				state = #{state}
			</if>
			where id = #{id}
		</set>
	</update>

	<delete id="deleteComment" parameterType="Integer" >
		delete from t_comment where id = #{id}
	</delete>
</mapper> 